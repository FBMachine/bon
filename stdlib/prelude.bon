cdef exit(code:int) -> ()

class Object<T>
  def delete(self:T) -> ();
end

class Concat<T>
  def operator++(a:T, b:T) -> T;
end

class Print<T>
  def to_string(x:T) -> string;
  def print(x:T) -> ();
  def write(x:T) -> ();
end

def str(x) -> string
  to_string(x)
end

class Integer<T>
  def to_integer(x:T) -> int;
end

class Float<T>
  def to_float(x:T) -> float;
end

def int(x) -> int
  to_integer(x)
end

def float(x) -> float
  to_float(x)
end

class Eq<T>
  def operator==(a:T, b:T) -> bool;
  def operator!=(a:T, b:T) -> bool;
end

class Ord<T>
  def operator>(a:T, b:T) -> bool;
  def operator<(a:T, b:T) -> bool;
  def operator>=(a:T, b:T) -> bool;
  def operator<=(a:T, b:T) -> bool;
end

class Copy<T>
  def copy(x:T) -> T;
end

type pair<a,b>
  Pair(a, b)
end

class BoundsCheck<T>
  def out_of_bounds(template:T);
end

type tuple<a,b,c,d,e,f,g,h,i,j,k,l,m,n,o>
  Tuple3(a, b, c)
  Tuple4(a, b, c, d)
  Tuple5(a, b, c, d, e)
  Tuple6(a, b, c, d, e, f)
  Tuple7(a, b, c, d, e, f, g)
  Tuple8(a, b, c, d, e, f, g, h)
  Tuple9(a, b, c, d, e, f, g, h, i)
  Tuple10(a, b, c, d, e, f, g, h, i, j)
  Tuple11(a, b, c, d, e, f, g, h, i, j, k)
  Tuple12(a, b, c, d, e, f, g, h, i, j, k, l)
  Tuple13(a, b, c, d, e, f, g, h, i, j, k, l, m)
  Tuple14(a, b, c, d, e, f, g, h, i, j, k, l, m, n)
  Tuple15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
end

import math
import vector
import string
import option
import bool
import print
