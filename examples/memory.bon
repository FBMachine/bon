# Example of automatic memory management
# TODO: make this example clearer

class Object<T>
  def delete(self:T) -> ();
end

type custom_number
  One
  Two
  Many
end

impl Object<custom_number>
  def delete(self:custom_number) -> ()
    print("Deleting custom_number:")
    match self
      One => print("One")
      Two => print("Two")
      Many => print("Many")
    end
  end
end

def foo()
  x = [5,3,2,1,23,3,3,3,3]
  if 10 > 5
    # x is freed here
    [1]
  else
    x
  end
end

def bar()
  x = new Some(5)
  x
end

def baz()
  y = bar()
  match y
    Some(a) => print(a)
    None => print("None")
  end
end

def foobar(x, y)
  # this will have delete called on it when function exits
  j = new One
  # does not have delete called on it, as it's not a persistent object
  k = Two
  x + y
end

def main()
  x = foo()
  baz()
  print(foobar(5,10))
end

main()
